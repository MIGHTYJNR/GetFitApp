﻿@using GetFitApp.AdminViewModel;
@using GetFitApp.Data.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> signInManager;

@model EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<h2>@ViewData["Title"]</h2>
<hr>

<form method="post" class="mt-3">
    <div class="form-group">
        <label asp-for="UserName" class="col-sm-2 col-form-label">Username:</label>
        <input asp-for="UserName" class="form-control">
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email" class="col-sm-2 col-form-label">Email:</label>
        <input asp-for="Email" class="form-control">
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <div>
            <button style="width:auto" type="submit" class="btn btn-success rounded-pill">Save Changes</button>
            <a style="width:auto" asp-action="ListUsers" class="btn btn-primary rounded-pill">Cancel</a>
        </div>
    </div>

    <br /> <br />

    <div class="card border-dark">
        <div class="card-header">
            USER ROLES
        </div>
        <div class="card-body">
            @if (Model.Roles.Any())
            {
                foreach (var role in Model.Roles)
                {
                    <h5 class="card-title">@role</h5>
                }
            }
            else
            {
                <h5 class="card-title">None at the moment</h5>
            }

            @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
            {
                <a asp-action="ManageUserRoles" asp-controller="Administration"
                   asp-route-userId="@Model.Id" class="btn btn-primary btn-sm rounded-pill" style="width:auto">
                    Manage Roles
                </a>
            }
        </div>
    </div>
</form>